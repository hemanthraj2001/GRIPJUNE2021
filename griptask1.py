# -*- coding: utf-8 -*-
"""grip.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C3kXgAKvO-TyJAyWoomqA_dIBeSbYntX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
path=("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
df=pd.read_csv(path)
X=df.iloc[:,:-1].values
y=df.iloc[:,-1].values
df

""" **Data Pre-Processing**"""

df.columns

df.shape

df.dtypes

df.isna()

df.describe()

"""Plotting data points on an 2-D graph """

df.plot(x='Hours',y='Scores',style='o')
plt.title('Hours vs Perentage Scores')
plt.xlabel('Hours')
plt.ylabel('Percentage Scores')
plt.show()

"""**Training the data with Linear Regression**"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)
pdata= pd.DataFrame({'result':y_pred})
pdata

data=pd.DataFrame({'Actual':y_test,'Predicted': y_pred})
data

"""**Letâ€™s visualize our training model and testing model:**

> Plotting the Training Data


"""

viz_train = plt
viz_train.scatter(X_train, y_train, color='blue')
viz_train.plot(X_train, regressor.predict(X_train), color='yellow')
viz_train.title('Hours vs Score (Training set)')
viz_train.xlabel('Hours')
viz_train.ylabel('Score')
viz_train.show()

"""

> Plotting the Testing Data

"""

viz_test = plt
viz_test.scatter(X_test, y_test, color='blue')
viz_test.plot(X_train, regressor.predict(X_train), color='yellow')
viz_test.title('Hours vs Score (Training set)')
viz_test.xlabel('Hours')
viz_test.ylabel('Score')
viz_test.show()

"""**Predicted Score If a student works for 9.25 Hrs/day**



"""

predictvalue=regressor.predict([[9.25]])

print(predictvalue)

from sklearn import metrics  
print('Mean Absolute Error:', 
      metrics.mean_absolute_error(y_test, y_pred))
